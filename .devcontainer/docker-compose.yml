version: '3.8'

# Runs all services (containers) on the same network which enables "forwardPorts"
# in devcontainer.json function to be used for all of them.
# Example:
# - Add "forwardPorts": ["27017"] to forward MongoDB locally.
# - Add "forwardPorts": ["5432"] to forward PostgreSQL locally.
#
# (Adding the "ports" property to this file will not forward from a Codespace.)

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile

    volumes:
      - ../..:/workspaces:cached
    
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
      PGHOST: localhost
      POSTGRES_DB: postgres

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

  postgres:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

    network_mode: service:app

  hbase:
    image: uivraeus/hbase_docker:2.5.7
    restart: unless-stopped
    command:
      - "/bin/bash"
      - "-c"
      - "start-hbase.sh; tail -f /root/hbase-bin/logs/*.log"
    volumes:
      - hbase-data:/root/tmp
      - ../lab:/workspace/lab:ro

    network_mode: service:app
    
  mongodb:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db

    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: mongo
    #   MONGO_INITDB_ROOT_PASSWORD: mongo
    #   MONGO_INITDB_DATABASE: mongo
    
    network_mode: service:app

  couchdb:
    image: couchdb:latest
    restart: unless-stopped
    volumes:
      - couchdb-data:/opt/couchdb/data
      - ./couchdb_local.ini:/opt/couchdb/etc/local.ini
    environment:
      COUCHDB_USER: couch
      COUCHDB_PASSWORD: couch
    
    network_mode: service:app

  neo4j:
    image: neo4j:enterprise
    restart: unless-stopped
    volumes:
      - neo4j-data:/data
    environment:
      NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
      NEO4J_AUTH: none
    
    network_mode: service:app

  redis:
    image: redis:latest
    restart: unless-stopped
    #volumes:
    #  - redis-data:/data
    #command: redis-server --save 60 1 --loglevel warning
    
    network_mode: service:app


volumes:
  postgres-data:
  hbase-data:
  mongodb-data:
  couchdb-data:
  neo4j-data:
  #redis-data:
